#!/usr/local/bin/python

import os
import sys
import itertools
from trello import TrelloClient

def strip_tags_and_list(params):
    return filter(lambda x: False if x.startswith('#') or x.startswith('@') or x.startswith('t:') else True, params)

def parse_title(params, default=None):
    for item in params:
        if item.startswith('t:'):
            return item.replace('t:', '')

    return default

def parse_tags(params):
    for item in params:
        if item.startswith('#'):
            yield item.replace('#', '')

def parse_list(params, default='Inbox'):
    for item in params:
        if item.startswith('@'):
            return ''.join(item[1:])

    return default

def main(args):
    tokens = list(itertools.chain(*map(lambda x: x.split(' '), args)))
    client = TrelloClient(os.environ['TRELLO_API_KEY'],
                          token=os.environ['TRELLO_TOKEN'])
    board = None

    for b in client.list_boards():
        if b.name.lower() == os.environ['TRELLO_BOARD'].lower():
            board = b
            break

    if not board is None:
        card_content = ' '.join(strip_tags_and_list(args))
        card_tags = list(parse_tags(tokens))
        card_list = parse_list(tokens, default=os.environ['TRELLO_LIST'])
        card_title = parse_title(args, default=' '.join(strip_tags_and_list(tokens))).title()

        if len(card_content) == 0:
            return

        for l in b.all_lists():
            if l.name.lower() == card_list.lower():
                l.add_card(card_title, card_content)

if __name__ == '__main__':
    main(sys.argv[1:])
